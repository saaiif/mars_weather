const times = [
	'1:09:07',
	'1:23:48',
	'2:27:08',
	'1:20:22',
	'14:47',
	'28:36',
	'1:32:23',
	'4:37',
	'2:15:36',
	'1:48:45',
	'1:14:42',
	'1:28:56',
	'1:33:17',
	'2:15:35',
	'1:48:54',
	'1:07:25',
	'57:39',
	'1:36:11',
	'55:08',
	'38:08',
	'1:19:25',
	'2:03:45',
	'1:20:01',
	'1:21',
	'40:55',
	'3:07:04',
	'49:39',
	'39:31',
	'2:16:08',
	'14:22',
	'1:07:58',
	'32:42',
	'10:20',
	'30:49',
	'1:25:32',
	'1:26:24',
	'30:09',
	'20:21',
	'1:41:58',
	'1:26:57',
	'1:21:14',
	'3:57:31',
	'41:44',
	'1:45:37',
	'2:22:38',
	'2:56:10',
	'1:16:50',
	'28:39',
	'1:03:06',
	'45:29',
	'1:22:45',
	'3:05:21',
	'30:02',
	'31:56',
	'37:56',
	'1:52:25',
	'35:22',
	'2:13:54',
	'1:34:01',
	'1:24:15',
	'1:09:46',
	'46:00',
	'27:17',
	'1:50:39',
	'1:12:40',
	'2:08:36',
	'1:41:41',
	'1:09:03',
	'1:02:19',
	'1:33:28',
	'46:41',
	'1:09:01',
	'1:31:45',
	'3:54',
	'55:36',
	'1:44:30',
	'1:26:59',
	'1:04:32',
	'14:06',
	'1:16:47',
	'1:17:56',
	'47:51',
	'1:37:29',
	'2:56',
	'24:58',
	'7:30',
	'1:03:34',
	'8:59',
	'4:29',
	'2:57',
	'3:14',
	'12:50',
	'57:36',
	'13:54',
	'6:34',
	'5:57',
	'5:32',
	'3:02:12',
	'2:24',
	'2:10:34',
	'7:13',
	'2:00:00',
	'2:16',
	'2:17:06',
	'21:38',
	'1:26:21',
	'9:57',
	'5:46',
	'18:46',
	'5:11',
	'2:01',
	'3:18',
	'2:31:57',
	'5:25',
	'1:30:39',
	'8:43',
	'5:10',
	'9:48',
	'6:59',
	'2:21:30',
	'7:32',
	'29:37',
	'1:54:16',
	'12:29',
	'55:35',
	'12:51',
	'11:45',
	'8:54',
	'3:05',
	'1:22:14',
	'10:28',
	'5:44',
	'21:32',
	'5:38',
	'29:07',
	'19:38',
	'19:01',
	'16:34',
	'11:02',
	'12:00',
	'8:59',
	'4:29'
];

const totalTime = times.reduce((acc, t) => {
	const sp = t.split(':').reverse().map(Number);
	console.log(sp);

	let total = sp[0];
	total += sp[1] * 60;
	total += sp[2] ? sp[2] * 3600 : 0;

	return acc + total;
}, 0);

const totalTimeFormat = (sec) => {
	let hour = Math.floor(sec / 3600);
	let min = Math.floor((sec % 3600) / 60);
	let seconds = sec % 60;

	min = min < 10 ? '0' + min : min;
	seconds = seconds < 10 ? '0' + seconds : seconds;

	return `${hour}:${min}:${seconds}`;
};

console.log(totalTimeFormat(totalTime));
